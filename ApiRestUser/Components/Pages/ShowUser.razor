@page "/datauser/{Id:int}"
@using ApiRestUser.Models;
@inject HttpClient http
@inject NavigationManager Navigationmanager;
@rendermode InteractiveServer

@if (usuario != null)
{
    <div class="card border border-secondary">
        <div class="card-body">
            <h5 class="card-title">@usuario.Nombre @usuario.Apellidos</h5>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><span class="text-primary  fw-bold">Número de Identificación: </span>  @usuario.Numero_Identificacion</li>
                <li class="list-group-item"><span class="text-primary fw-bold">Fecha de Nacimiento:</span>  @usuario.Fecha_Nacimiento</li>
                <li class="list-group-item"><span class="text-primary   fw-bold">Teléfono:</span>   @usuario.Telefono</li>
            </ul>
           <div>
                <NavLink href=@($"/form/{usuario.Id}") class="btn btn-success">Editar</NavLink>
                
           </div>
           <div>
                <button class="btn btn-primary" @onclick="@(async () => await Delete())">Click me</button>
           </div>
        </div>

    </div>
}
else
{
    
    <h1>Cargando...</h1>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject] public IHttpClientFactory ClientFactory { get; set; }


    public Usuario usuario { get; set; }
    private HttpClient _client;


    protected override async Task OnInitializedAsync()
    {
        _client = ClientFactory.CreateClient("ServerClient");

        try
        {

            usuario = await _client.GetFromJsonAsync<Usuario>($"/api/usuarios/{Id}");

        }
        catch (Exception ex)
        {
            
            Console.WriteLine($"Error al obtener los usuarios: {ex.Message}");
        }
    }

    private async Task Delete()
    {
        if (Id > 0)
        {
            await _client.DeleteAsync($"api/usuarios/{Id}");
            Navigationmanager.NavigateTo("/table/users");
        }
        else
        {
            Console.WriteLine("Por favor, ingrese un ID de empleado válido.");
        }
    }

  

}
